{"version":3,"sources":["stores/list-store.js","stores/travel.store.js","stores/form.store.js","utils/calculator.utils.js","components/input-form/input-form.component.jsx","components/travel-details/travel-details.component.jsx","components/travel-summary/travel-summary.component.jsx","components/my-list/my-list.component.jsx","pages/home/home.component.jsx","assets/commuter-calculator-logo-blue.png","components/header/header.component.jsx","App.js","index.js"],"names":["ListStore","observable","myList","TravelStore","show","homeLocation","nearestDestinationStation","nearestHomeStation","journeyData","trainTravelTime","lowerValue","higherValue","FormStore","showDropDown","dailyTravelSpend","dailyTravelTime","destinationPostCode","destinationDetails","destinationCoords","longitude","latitude","nearestDestinationStations","homePostCode","homeDetails","homeCoords","nearestHomeStations","validatePostCode","postCode","a","postcodeValidator","alert","getHomeLocation","axios","get","then","res","data","result","admin_district","catch","err","console","log","InputForm","event","target","value","name","input","journeys","duration","preventDefault","className","onSubmit","action","this","handleSubmit","type","autoComplete","onChange","handleChange","label","required","Component","observer","props","trainTime","trainCost","location","style","id","color","MyList","map","i","dailyTrainSpend","carTime","dailyCarTime","carCost","dailyCarSpend","onClick","splice","Home","index","push","clone","length","pushToMyList","Header","alt","src","logo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.375a3b75.chunk.js","sourcesContent":["import { observable } from 'mobx'\n\nconst ListStore = observable({\n    myList: [],\n})\n\nexport default ListStore","import {observable} from 'mobx'\n\nconst TravelStore = observable({\n    show: false,\n    homeLocation: '',\n    nearestDestinationStation: '',\n    nearestHomeStation: '',\n    journeyData: {},\n    trainTravelTime: '',\n    lowerValue: false,\n    higherValue: false,\n\n})\nexport default TravelStore","import { observable } from 'mobx'\n\nconst FormStore = observable({\n    show: false,\n    showDropDown: false,\n    dailyTravelSpend: 0,\n    dailyTravelTime: 0,\n    destinationPostCode: '',\n    destinationDetails: {},\n    destinationCoords: {\n        longitude: '',\n        latitude: ''\n    },\n    nearestDestinationStations: [],\n    homePostCode: '',\n    homeDetails: {},\n    homeCoords: {\n        longitude: '',\n        latitude: '',\n    },\n    nearestHomeStations: [],\n})\n\nexport default FormStore","import axios from 'axios'\nimport {postcodeValidator} from 'postcode-validator'\n\nimport FormStore from '../stores/form.store'\nimport ListStore from '../stores/list-store'\nimport TravelStore from '../stores/travel.store'\n\nexport const getValueFormat = (index) => {\n    if (FormStore.dailyTravelTime >= ListStore.myList[index].trainTravelTime) {\n        ListStore.myList[index].lowerValue = true\n        ListStore.myList[index].higherValue = false\n    }\n    if (FormStore.dailyTravelTime < ListStore.myList[index].trainTravelTime) {\n        ListStore.myList[index].lowerValue = false\n        ListStore.myList[index].higherValue = true\n    }\n}\n\nexport async function validatePostCode(postCode) {\n    if (postcodeValidator(postCode, 'GB') === true) {\n        TravelStore.show = true\n    }\n    else {\n        alert(`The postcode: ${postCode} does not exist. Please enter a valid postcode`)\n        TravelStore.show = false\n    }\n\n}\n\nexport async function getDestination(){\n    let destinationPostCode = FormStore.destinationPostCode\n    axios.get(`https://api.postcodes.io/postcodes/${destinationPostCode}`)\n        .then(res => {\n            FormStore.destinationCoords.latitude = res.data.result.latitude\n            FormStore.destinationCoords.longitude = res.data.result.longitude\n        })\n        .catch(err => (err))\n}\n\nexport async function getHomeLocation(){\n    let homePostCode = FormStore.homePostCode\n    axios.get(`https://api.postcodes.io/postcodes/${homePostCode}`)\n        .then(res => {\n            TravelStore.homeLocation = res.data.result.admin_district\n            FormStore.homeCoords.latitude = res.data.result.latitude\n            FormStore.homeCoords.longitude = res.data.result.longitude\n        })\n        .catch(err => console.log(err))\n}\n\n// export function getNearestHomeStations(){\n//     axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${FormStore.homeCoords.latitude},${FormStore.homeCoords.longitude}&radius=5000&type=train_station&key=$FILLIN`,{\n//         headers: {\n//         'Access-Control-Allow-Origin' : '*',\n//         'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',}})\n//         .then(res => {\n//             TravelStore.nearestHomeStation = res.data.results\n//             console.log(TravelStore.nearestHomeStation)\n//         })\n// }\n\n\n\n// export function getNearestDestinationStations(){\n//     axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${FormStore.destinationCoords.latitude},${FormStore.destinationCoords.longitude}&radius=5000&type=train_station&key=FILLIN`,{\n//         headers: {\n//         'Access-Control-Allow-Origin' : '*',\n//         'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',}})\n//         .then(res => {\n//             TravelStore.nearestDestinationStation = res.data.results\n//             console.log(TravelStore.nearestHomeStation)\n//         })\n// }\n\n// export function getNearestHomeStations(){\n//     axios.get(`https://api.tfl.gov.uk/StopPoint/?lat=${FormStore.homeCoords.latitude}&lon=${FormStore.homeCoords.longitude}&stopTypes=NaptanRailStation&radius=5000`,{\n//         headers: {\n//         'Access-Control-Allow-Origin' : '*',\n//         'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',}})\n//         .then(res => {\n//             TravelStore.nearestHomeStation = res.data.results\n//             console.log(TravelStore.nearestHomeStation)\n//         })\n// }\n\nexport const getTravelDetails = () => {\n    axios.get(`https://api.tfl.gov.uk/Journey/JourneyResults/${FormStore.destinationPostCode}/to/${FormStore.homePostCode}&nationalSearch=true`)\n     .then(res => {\n         TravelStore.journeyData = res.data.journeys\n         TravelStore.trainTravelTime = res.data.journeys[0].duration\n        })\n    //  .then(res => {\n    //      TravelStore.journeyData = res.data\n    //  })\n    //  .then(console.log(TravelStore.journeyData))\n}\n\nexport const getFareInfo = () => {\n    axios.get('https://api.tfl.gov.uk/StopPoint/910GGRVPK/FareTo/910GLNDNBDC')\n    .then(res => {\n        console.log(res)\n    })\n}\n","import { observer } from 'mobx-react';\nimport { action } from 'mobx'\nimport React, { Component } from 'react'\n\nimport FormStore from '../../stores/form.store'\n\nimport { validatePostCode, \n    getHomeLocation, \n    getTravelDetails,\n    getFareInfo,\n} from '../../utils/calculator.utils'\n\nimport './input-form.styles.scss'\n\nclass InputForm extends Component {\n    \n    handleChange(event) {\n        const { value, name } = event.target\n        let input = value;\n        FormStore[name] = input\n        return input\n    }\n\n    async handleSubmit(event) {\n        await getHomeLocation()\n        getTravelDetails()\n        event.preventDefault();\n        validatePostCode(FormStore.destinationPostCode, 'GB')\n        validatePostCode(FormStore.homePostCode, 'GB')\n        getFareInfo()        \n    }\n\n    render(){\n        return(\n            <div className='input-form'>\n                <form className='form-fields' onSubmit={action(this.handleSubmit)}>\n                    <label className='label-name'>\n                        <span className='content-name'>Daily Travel Spend Budget</span>\n                    </label>\n                    <input\n                        className='input-number' \n                        type='number' \n                        name='dailyTravelSpend'\n                        autoComplete='off'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='DAILY TRAVEL SPEND'\n                        required\n                    />\n                    <label>Daily Travel Time Budget</label>\n                    <input \n                        className='input-number' \n                        type='number' \n                        name='dailyTravelTime'\n                        autoComplete='off'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='DAILY TRAVEL TIME'\n                        required\n                    />\n                    <label>Destination Postcode</label>\n                    <input \n                        className='input-text'\n                        type='text' \n                        name='destinationPostCode'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='DESTINATION POST CODE'\n                        required\n                    />\n                    <label>New Home Postcode</label>\n                    <input \n                        className='input-text'\n                        type='text' \n                        name='homePostCode'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='NEW HOME POSTCODE'\n                        required\n                    />\n                    <input className='submit-button' type='submit' value='SUBMIT' />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default observer(InputForm)\n\n// onClick={() => this.findLocation(FormStore.homePostCode)}","import { observer } from 'mobx-react'\nimport React from 'react'\nimport TravelStore from '../../stores/travel.store'\n\n\nimport './travel-details.styles.scss'\n\nconst TravelDetails = (props) => {\n    return(\n        \n        <div>\n            {/* add If component conditional in here */}\n            {\n                !TravelStore.show ? null\n                :\n                <div className='list-item'>\n                    <div className='location-details'>\n                        <h3 className='option-bold'>Location: {props.homeLocation}</h3>\n                        <span className='option'>Train travel time: {props.trainTime} mins\n                        </span>\n                        <span className='option'>Train travel cost: £{props.trainCost}</span>\n                        {/* <span className='option'>Car travel time: {props.carTime} mins</span>\n                        <span className='option'>Car travel cost: £{props.carCost}</span> */}\n                        {/* <button>Add to list</button> */}\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\n// class TravelDetails extends Component {\n\n//     constructor(){\n//         super();\n\n//         this.state = {\n//             trainTime: 0,\n//             trainCost: 0,\n//             carTime: 0,\n//             carCost: 0,\n//             homePostcode: '',\n//         }\n//     }\n\n//     render(){\n//         return(\n//             <div className='location-details'>\n//                 \n//             </div>\n//         )\n//     }\n// }\n\nexport default observer(TravelDetails)","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport './travel-summary.styles.scss'\n\nimport ListStore from '../../stores/list-store'\n\nconst TravelSummary = (props) => {\n    return(\n        <div className='location-details'>\n            <span className='option-bold'>Location: {props.location}</span>\n            <span className='option' \n                style={ListStore.myList[props.id].lowerValue ? {color:  \"#13B000\"} : null | ListStore.myList[props.id].higherValue ? {color:  \"red\"} : null}\n            >\n                Train travel time: {props.trainTime} mins\n            </span>\n            <span className='option'>Train travel cost: £{props.trainCost}</span>\n            {/* <span className='option'>Car travel time: {props.carTime} mins</span>\n            <span className='option'>Car travel cost: £{props.carCost}</span> */}\n            {/* <button>Add to list</button> */}\n        </div>\n    )\n}\n\nexport default observer(TravelSummary)","import { observer } from 'mobx-react';\nimport React, { Component } from 'react'\n\nimport './my-list.styles.scss'\n\nimport ListStore from '../../stores/list-store'\n\nimport TravelSummary from '../travel-summary/travel-summary.component'\n\n\nclass MyList extends Component {\n\n    render(){\n        console.log(ListStore.myList)\n        return(\n            <div>\n                {ListStore.myList.map((location, i) => \n                    <div className='list-item' key={`myList${i}`}>\n                        <TravelSummary \n                            location={location.homeLocation}\n                            trainTime={location.trainTravelTime}\n                            trainCost={location.dailyTrainSpend}\n                            carTime={location.dailyCarTime}\n                            carCost={location.dailyCarSpend}\n                            id={i}\n                        />\n                        <span className='cross' onClick={() => ListStore.myList.splice(i,1)}>&#215;</span>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default observer(MyList) \n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\nimport { action } from 'mobx'\nimport clone  from 'lodash/cloneDeep'\n\nimport './home.styles.scss'\n\nimport ListStore from '../../stores/list-store'\nimport TravelStore from '../../stores/travel.store'\n\nimport InputForm from '../../components/input-form/input-form.component'\nimport TravelDetails from '../../components/travel-details/travel-details.component'\nimport MyList from '../../components/my-list/my-list.component'\nimport { getValueFormat } from '../../utils/calculator.utils'\n\n\n\nclass Home extends Component {\n\n\n    pushToMyList(location){\n        action(ListStore.myList.push(clone(location)))\n        getValueFormat(ListStore.myList.length - 1)\n    }\n\n    render(){\n        return(\n            <div>\n                <div className='home-grid'>\n                <div className='your-details'>\n                    <h2>YOUR DETAILS</h2>\n                    <InputForm />\n                    {\n                        !TravelStore.journeyData.length ? null \n                        :\n                        <TravelDetails\n                        homeLocation={TravelStore.homeLocation}\n                        trainTime={TravelStore.trainTravelTime}\n                        trainCost={0}\n                        carTime={0}\n                        carCost={0}\n                        />\n                    }\n                    \n                    {/* eslint-disable-next-line */}\n                    {\n                        !TravelStore.show ? null\n                        :\n                        <button \n                            className='add-to-list-button' \n                            onClick={action(() => this.pushToMyList(TravelStore))}>\n                            ADD TO MY LIST\n                        </button>\n                    }\n                </div>\n                <div className='my-list'>\n                    <h2>MY LIST</h2>\n                    <MyList/>\n                </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default observer(Home)","export default __webpack_public_path__ + \"static/media/commuter-calculator-logo-blue.5e03eebf.png\";","import React from 'react'\n\nimport './header.styles.scss'\nimport logo from '../../assets/commuter-calculator-logo-blue.png'\n\nconst Header = () => (\n    <div className='logo-container'>\n        <img className='logo' alt='logo' src={logo} />\n    </div>\n)\n\nexport default Header","import './App.css';\n\nimport Home from './pages/home/home.component'\nimport Header from './components/header/header.component'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}