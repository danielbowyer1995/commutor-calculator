{"version":3,"sources":["stores/list-store.js","stores/travel.store.js","stores/form.store.js","utils/calculator.utils.js","components/input-form/input-form.component.jsx","components/travel-details/travel-details.component.jsx","components/travel-summary/travel-summary.component.jsx","components/my-list/my-list.component.jsx","pages/home/home.component.jsx","assets/commuter-calculator-logo.png","components/header/header.component.jsx","App.js","index.js"],"names":["ListStore","observable","myList","TravelStore","show","homeLocation","nearestDestinationStation","nearestHomeStation","journeyData","trainTravelTime","lowerValue","higherValue","FormStore","showDropDown","dailyTravelSpend","dailyTravelTime","destinationPostCode","destinationDetails","destinationCoords","longitude","latitude","nearestDestinationStations","homePostCode","homeDetails","homeCoords","nearestHomeStations","getValueFormat","index","validatePostCode","postCode","a","postcodeValidator","alert","getHomeLocation","axios","get","then","res","data","result","admin_district","catch","err","console","log","InputForm","event","target","value","name","input","journeys","duration","preventDefault","length","className","onSubmit","action","this","handleSubmit","type","autoComplete","onChange","handleChange","label","required","Component","observer","props","trainTime","trainCost","location","style","color","MyList","indexOf","map","i","dailyTrainSpend","carTime","dailyCarTime","carCost","dailyCarSpend","onClick","splice","Home","push","clone","pushToMyList","Header","alt","src","logo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cfa5010.chunk.js","sourcesContent":["import { observable } from 'mobx'\n\nconst ListStore = observable({\n    myList: [],\n})\n\nexport default ListStore","import {observable} from 'mobx'\n\nconst TravelStore = observable({\n    show: false,\n    homeLocation: '',\n    nearestDestinationStation: '',\n    nearestHomeStation: '',\n    journeyData: {},\n    trainTravelTime: '',\n    lowerValue: false,\n    higherValue: false,\n\n})\nexport default TravelStore","import { observable } from 'mobx'\n\nconst FormStore = observable({\n    show: false,\n    showDropDown: false,\n    dailyTravelSpend: 0,\n    dailyTravelTime: 0,\n    destinationPostCode: '',\n    destinationDetails: {},\n    destinationCoords: {\n        longitude: '',\n        latitude: ''\n    },\n    nearestDestinationStations: [],\n    homePostCode: '',\n    homeDetails: {},\n    homeCoords: {\n        longitude: '',\n        latitude: '',\n    },\n    nearestHomeStations: [],\n})\n\nexport default FormStore","import axios from 'axios'\nimport {postcodeValidator} from 'postcode-validator'\n\nimport FormStore from '../stores/form.store'\nimport ListStore from '../stores/list-store'\nimport TravelStore from '../stores/travel.store'\n\nexport const getValueFormat = (index) => {\n    if (FormStore.dailyTravelTime > ListStore.myList[index].trainTravelTime) {\n        TravelStore.lowerValue = true\n    }\n    else if (FormStore.dailyTravelTime < ListStore.myList[index].trainTravelTime) {\n        TravelStore.higherValue = true\n    }\n    else {\n        TravelStore.lowerValue = false\n        TravelStore.higherValue = false\n    }\n}\n\nexport async function validatePostCode(postCode) {\n    if (postcodeValidator(postCode, 'GB') === true) {\n        TravelStore.show = true\n    }\n    else {\n        alert(`The postcode: ${postCode} does not exist. Please enter a valid postcode`)\n        TravelStore.show = false\n    }\n\n}\n\nexport async function getDestination(){\n    let destinationPostCode = FormStore.destinationPostCode\n    axios.get(`https://api.postcodes.io/postcodes/${destinationPostCode}`)\n        .then(res => {\n            FormStore.destinationCoords.latitude = res.data.result.latitude\n            FormStore.destinationCoords.longitude = res.data.result.longitude\n        })\n        .catch(err => (err))\n}\n\nexport async function getHomeLocation(){\n    let homePostCode = FormStore.homePostCode\n    axios.get(`https://api.postcodes.io/postcodes/${homePostCode}`)\n        .then(res => {\n            TravelStore.homeLocation = res.data.result.admin_district\n            FormStore.homeCoords.latitude = res.data.result.latitude\n            FormStore.homeCoords.longitude = res.data.result.longitude\n        })\n        .catch(err => console.log(err))\n}\n\n// export function getNearestHomeStations(){\n//     axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${FormStore.homeCoords.latitude},${FormStore.homeCoords.longitude}&radius=5000&type=train_station&key=$FILLIN`,{\n//         headers: {\n//         'Access-Control-Allow-Origin' : '*',\n//         'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',}})\n//         .then(res => {\n//             TravelStore.nearestHomeStation = res.data.results\n//             console.log(TravelStore.nearestHomeStation)\n//         })\n// }\n\n\n\n// export function getNearestDestinationStations(){\n//     axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${FormStore.destinationCoords.latitude},${FormStore.destinationCoords.longitude}&radius=5000&type=train_station&key=FILLIN`,{\n//         headers: {\n//         'Access-Control-Allow-Origin' : '*',\n//         'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',}})\n//         .then(res => {\n//             TravelStore.nearestDestinationStation = res.data.results\n//             console.log(TravelStore.nearestHomeStation)\n//         })\n// }\n\n// export function getNearestHomeStations(){\n//     axios.get(`https://api.tfl.gov.uk/StopPoint/?lat=${FormStore.homeCoords.latitude}&lon=${FormStore.homeCoords.longitude}&stopTypes=NaptanRailStation&radius=5000`,{\n//         headers: {\n//         'Access-Control-Allow-Origin' : '*',\n//         'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',}})\n//         .then(res => {\n//             TravelStore.nearestHomeStation = res.data.results\n//             console.log(TravelStore.nearestHomeStation)\n//         })\n// }\n\nexport const getTravelDetails = () => {\n    axios.get(`https://api.tfl.gov.uk/Journey/JourneyResults/${FormStore.destinationPostCode}/to/${FormStore.homePostCode}&nationalSearch=true`)\n     .then(res => {\n         TravelStore.journeyData = res.data.journeys\n         TravelStore.trainTravelTime = res.data.journeys[0].duration\n        })\n    //  .then(res => {\n    //      TravelStore.journeyData = res.data\n    //  })\n    //  .then(console.log(TravelStore.journeyData))\n}\n\nexport const getFareInfo = () => {\n    axios.get('https://api.tfl.gov.uk/StopPoint/910GGRVPK/FareTo/910GLNDNBDC')\n    .then(res => {\n        console.log(res)\n    })\n}\n","import { observer } from 'mobx-react';\nimport { action } from 'mobx'\nimport React, { Component } from 'react'\n\nimport FormStore from '../../stores/form.store'\nimport ListStore from '../../stores/list-store'\n\nimport { validatePostCode, \n    getHomeLocation, \n    getTravelDetails,\n    getFareInfo,\n    getValueFormat, \n} from '../../utils/calculator.utils'\n\nimport './input-form.styles.scss'\n\nclass InputForm extends Component {\n    \n    handleChange(event) {\n        const { value, name } = event.target\n        let input = value;\n        FormStore[name] = input\n        return input\n    }\n\n    async handleSubmit(event) {\n        await getHomeLocation()\n        getTravelDetails()\n        event.preventDefault();\n        validatePostCode(FormStore.destinationPostCode, 'GB')\n        validatePostCode(FormStore.homePostCode, 'GB')\n        getFareInfo()\n        getValueFormat(ListStore.myList.length)\n        \n        \n    }\n\n    render(){\n        return(\n            <div className='input-form'>\n                <form className='form-fields' onSubmit={action(this.handleSubmit)}>\n                    <label className='label-name'>\n                        <span className='content-name'>Daily Travel Spend Budget</span>\n                    </label>\n                    <input\n                        className='input-number' \n                        type='number' \n                        name='dailyTravelSpend'\n                        autoComplete='off'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='DAILY TRAVEL SPEND'\n                        required\n                    />\n                    <label>Daily Travel Time Budget</label>\n                    <input \n                        className='input-number' \n                        type='number' \n                        name='dailyTravelTime'\n                        autoComplete='off'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='DAILY TRAVEL TIME'\n                        required\n                    />\n                    <label>Destination Postcode</label>\n                    <input \n                        className='input-text'\n                        type='text' \n                        name='destinationPostCode'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='DESTINATION POST CODE'\n                        required\n                    />\n                    <label>New Home Postcode</label>\n                    <input \n                        className='input-text'\n                        type='text' \n                        name='homePostCode'\n                        value={this.input}\n                        onChange={action(this.handleChange)}\n                        label='NEW HOME POSTCODE'\n                        required\n                    />\n                    <input className='submit-button' type='submit' value='SUBMIT' />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default observer(InputForm)\n\n// onClick={() => this.findLocation(FormStore.homePostCode)}","import { observer } from 'mobx-react'\nimport React from 'react'\nimport TravelStore from '../../stores/travel.store'\n\n\nimport './travel-details.styles.scss'\n\nconst TravelDetails = (props) => {\n    return(\n        \n        <div>\n            {/* add If component conditional in here */}\n            {\n                !TravelStore.show ? null\n                :\n                <div className='location-details'>\n                    <h3>Location: {props.homeLocation}</h3>\n                    <span className='option'>Train travel time: {props.trainTime} mins\n                    </span>\n                    <span className='option'>Train travel cost: £{props.trainCost}</span>\n                    {/* <span className='option'>Car travel time: {props.carTime} mins</span>\n                    <span className='option'>Car travel cost: £{props.carCost}</span> */}\n                    {/* <button>Add to list</button> */}\n                </div>\n            }\n        </div>\n    )\n}\n\n// class TravelDetails extends Component {\n\n//     constructor(){\n//         super();\n\n//         this.state = {\n//             trainTime: 0,\n//             trainCost: 0,\n//             carTime: 0,\n//             carCost: 0,\n//             homePostcode: '',\n//         }\n//     }\n\n//     render(){\n//         return(\n//             <div className='location-details'>\n//                 \n//             </div>\n//         )\n//     }\n// }\n\nexport default observer(TravelDetails)","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport './travel-summary.styles.scss'\n\nimport TravelStore from '../../stores/travel.store'\n\nconst TravelSummary = (props) => {\n    return(\n        <div className='location-details'>\n            <span className='option-bold'>Location: {props.location}</span>\n            <span className='option' \n                style={TravelStore.lowerValue ? {color:  \"#13B000\"} : null | TravelStore.higherValue ? {color:  \"red\"} : null}\n            >\n                Train travel time: {props.trainTime} mins\n            </span>\n            <span className='option'>Train travel cost: £{props.trainCost}</span>\n            {/* <span className='option'>Car travel time: {props.carTime} mins</span>\n            <span className='option'>Car travel cost: £{props.carCost}</span> */}\n            {/* <button>Add to list</button> */}\n        </div>\n    )\n}\n\nexport default observer(TravelSummary)","import { observer } from 'mobx-react';\nimport React, { Component } from 'react'\n\nimport './my-list.styles.scss'\n\nimport ListStore from '../../stores/list-store'\n\nimport TravelSummary from '../travel-summary/travel-summary.component'\nimport { getValueFormat } from '../../utils/calculator.utils';\n\n\nclass MyList extends Component {\n    \n    constructor(){\n        super();\n\n        if (ListStore.myList.length < 0){\n            getValueFormat(ListStore.myList.indexOf(0))\n        }\n    }\n\n    render(){\n        console.log(ListStore.myList)\n        return(\n            <div>\n                {ListStore.myList.map((location, i) => \n                    <div className='list-item' key={`myList${i}`}>\n                        <TravelSummary \n                            location={location.homeLocation}\n                            trainTime={location.trainTravelTime}\n                            trainCost={location.dailyTrainSpend}\n                            carTime={location.dailyCarTime}\n                            carCost={location.dailyCarSpend}\n                        />\n                        <span className='cross' onClick={() => ListStore.myList.splice(i,1)}>&#215;</span>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default observer(MyList) \n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\nimport { action } from 'mobx'\nimport clone  from 'lodash/cloneDeep'\n\nimport './home.styles.scss'\n\nimport ListStore from '../../stores/list-store'\nimport TravelStore from '../../stores/travel.store'\n\nimport InputForm from '../../components/input-form/input-form.component'\nimport TravelDetails from '../../components/travel-details/travel-details.component'\nimport MyList from '../../components/my-list/my-list.component'\n\n\n\nclass Home extends Component {\n\n\n    pushToMyList(location){\n        action(ListStore.myList.push(clone(location)))\n    }\n\n    render(){\n        return(\n            <div>\n                <div className='home-grid'>\n                <div className='your-details'>\n                    <h2>YOUR DETAILS</h2>\n                    <InputForm />\n                    {\n                        !TravelStore.journeyData.length ? null \n                        :\n                        <TravelDetails\n                        homeLocation={TravelStore.homeLocation}\n                        trainTime={TravelStore.trainTravelTime}\n                        trainCost={0}\n                        carTime={0}\n                        carCost={0}\n                        />\n                    }\n                    \n                    {/* eslint-disable-next-line */}\n                    {\n                        !TravelStore.show ? null\n                        :\n                        <button \n                            className='add-to-list-button' \n                            onClick={action(() => this.pushToMyList(TravelStore))}>\n                            ADD TO MY LIST\n                        </button>\n                    }\n                </div>\n                <div className='my-list'>\n                    <h2>MY LIST</h2>\n                    <MyList/>\n                </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default observer(Home)","export default __webpack_public_path__ + \"static/media/commuter-calculator-logo.c9dae435.png\";","import React from 'react'\n\nimport './header.styles.scss'\nimport logo from '../../assets/commuter-calculator-logo.png'\n\nconst Header = () => (\n    <div className='logo-container'>\n        <img className='logo' alt='logo' src={logo} />\n    </div>\n)\n\nexport default Header","import './App.css';\n\nimport Home from './pages/home/home.component'\nimport Header from './components/header/header.component'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}